{"version":3,"sources":["components/Header.tsx","components/ContactItem.tsx","components/ContactsList.tsx","components/ContactsNavigation.tsx","axios/axios.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","ContactItem","contact","contactsData","setContactsData","onClick","updatedContactsData","map","contactItem","id","selected","console","log","filter","forEach","onKeyDown","event","key","tabIndex","avatar","src","alt","last_name","first_name","title","ContactsList","contactsDisplayed","ContactsNavigation","currentPage","setCurrentPage","searchQuery","setSearchQuery","pageCount","switchPage","desiredPage","type","value","onChange","target","disabled","axios","Axios","create","baseURL","timeout","override","css","App","useState","isFetchingData","setIsFetchingData","loadUsers","a","get","data","newContacts","useEffect","useMemo","filteredContacts","includes","sort","b","localeCompare","length","Math","ceil","slice","loading","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de9e6978.chunk.js","sourcesContent":["import { MdImportContacts } from 'react-icons/md';\r\nimport '../styles/header.scss';\r\n\r\nconst Header: React.FC = () => {\r\n    return(\r\n        <div className='header-wrapper'>\r\n            <i className='header-icon'><MdImportContacts /></i> \r\n            <h2 className='header-title'>Contacts</h2>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header;","import React, { KeyboardEvent } from 'react';\r\nimport { Contact } from '../types/Contact';\r\nimport '../styles/contactItem.scss'\r\nimport { FaUserAlt } from 'react-icons/fa';\r\nimport { BsCheck } from \"react-icons/bs\";\r\n\r\ntype Props = {\r\n    contact: Contact,\r\n    contactsData: Contact[],\r\n    setContactsData: (contactsData: Contact[]) => void\r\n}\r\n\r\nconst ContactItem: React.FC<Props> = ({contact, contactsData, setContactsData}) => {\r\n\r\n    const handleSelectClick = () => {\r\n        const updatedContactsData = contactsData.map((contactItem) => (\r\n            contactItem.id === contact.id? {...contact, selected: !contact.selected} : contactItem\r\n        ));\r\n        console.log('--Selected Contacts--');\r\n        updatedContactsData.filter(contact => contact.selected).forEach((contact) => console.log(contact.id));\r\n\r\n        setContactsData(updatedContactsData);\r\n    }\r\n\r\n    const handleSelectEnter = (event: KeyboardEvent<HTMLTableRowElement>) => {\r\n        if(event.key === 'Enter'){\r\n            const updatedContactsData = contactsData.map((contactItem) => (\r\n                contactItem.id === contact.id? {...contact, selected: !contact.selected} : contactItem\r\n            ));\r\n            console.log('--Selected Contacts--');\r\n            updatedContactsData.filter(contact => contact.selected).forEach((contact) => console.log(contact.id));\r\n            \r\n            setContactsData(updatedContactsData);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <tr className='contact-item-row' onClick={handleSelectClick} onKeyDown={handleSelectEnter} tabIndex={1}>\r\n            <td className='avatar'>\r\n                {contact.avatar ? \r\n                    <div className='avatar-wrapper'>\r\n                        <img src={contact.avatar} alt={`avatar-${contact.last_name}`} className='avatar-img' />\r\n                    </div>\r\n                    :\r\n                    <div className='avatar-wrapper'>\r\n                        <FaUserAlt />\r\n                    </div>\r\n                }\r\n            </td>\r\n            <td className='name'>{contact.first_name} {contact.last_name}</td>\r\n            <td className='select-contact'><span className='checkbox' title='select contact'>{contact.selected && <BsCheck />}</span></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default ContactItem;","import React from 'react'\r\nimport { Contact } from '../types/Contact';\r\nimport ContactItem from './ContactItem';\r\nimport '../styles/contactsList.scss'\r\n\r\ntype Props = {\r\n    contactsDisplayed: Contact[],\r\n    contactsData: Contact[],\r\n    setContactsData: (contactsData: Contact[]) => void\r\n}\r\n\r\nconst ContactsList: React.FC<Props> = ({contactsDisplayed, contactsData, setContactsData}) => {\r\n\r\n    return(\r\n        <table className='contacts-list-table'>\r\n            <thead>\r\n                <tr>\r\n                    <th>Avatar</th>\r\n                    <th>Name</th>\r\n                    <th>Select</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {contactsDisplayed.map((contact) => \r\n                    <ContactItem key={contact.id} contact={contact} contactsData={contactsData} setContactsData={setContactsData}/>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ContactsList;","import React, { ChangeEvent } from 'react';\r\nimport '../styles/contactsNavigation.scss';\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\nimport { RiArrowRightSFill, RiArrowLeftSFill } from 'react-icons/ri'\r\n\r\ntype Props = {\r\n    currentPage: number,\r\n    setCurrentPage: (currentPage: number) => void,\r\n    searchQuery: string,\r\n    setSearchQuery: (searchQuery: string) => void,\r\n    pageCount: number\r\n}\r\n\r\n\r\nconst ContactsNavigation: React.FC<Props> = ({currentPage, setCurrentPage, searchQuery, setSearchQuery, pageCount}) => {\r\n\r\n    const handleChange = ({target: {value}}: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchQuery(value)\r\n        setCurrentPage(1);\r\n    }\r\n\r\n    const switchPage = (desiredPage: number) => {\r\n        if (1 <= desiredPage && desiredPage <= pageCount) {\r\n            setCurrentPage(desiredPage);\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className='contacts-navigation-wrapper'>\r\n            <div className='search-input-wrapper'>\r\n                <i className='search-input-icon'><AiOutlineSearch /></i>\r\n                <input type='text' value={searchQuery} onChange={handleChange} className='search-input'></input>\r\n            </div>\r\n            <div className='pagination-wrapper'>\r\n                    <button disabled={currentPage === 1 ? true : false} className='prev-page-button' title='previous page' onClick={() => switchPage(currentPage - 1)}><i className='button-icon'><RiArrowLeftSFill /></i></button>\r\n                    <button disabled={currentPage === pageCount ? true : false} className='next-page-button' title='next page' onClick={() => switchPage(currentPage + 1)}><i className='button-icon'><RiArrowRightSFill /></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactsNavigation;","import Axios from 'axios';\r\n\r\nexport const axios = Axios.create({\r\n    baseURL: 'https://teacode-recruitment-challenge.s3.eu-central-1.amazonaws.com/',\r\n    timeout: 3000\r\n});\r\n","import React, { useEffect, useMemo, useState } from 'react';\nimport '../styles/app.scss';\nimport Header from './Header';\nimport ContactsList from './ContactsList';\nimport ContactsNavigation from './ContactsNavigation';\nimport { axios } from '../axios/axios';\nimport { css } from \"@emotion/react\";\nimport { ContactsResponse } from '../types/ContactsResponse';\nimport {Contact } from '../types/Contact';\nimport BarLoader from \"react-spinners/BarLoader\";\n\nconst USERS_PER_PAGE = 10;\n\nconst override = css`\n  width: 100%;\n`;\n\nconst App: React.FC = () => {\n\n  const [isFetchingData, setIsFetchingData] = useState<boolean>(false);\n  const [contactsData, setContactsData] = useState<Contact[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1)\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const loadUsers = async () => {\n  \n    try {\n      setIsFetchingData(true);\n      const { data }: ContactsResponse = await axios.get('/users.json');\n      const newContacts = data.map((contact) => ({...contact, selected: false}))\n      setContactsData(newContacts)\n      setIsFetchingData(false);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    loadUsers()\n  }, [])\n\n  const [ pageCount, filteredContacts ]: [number, Contact[]] = useMemo(() => {\n    \n    const filteredContacts = contactsData.filter(contact => contact.last_name.includes(searchQuery) || contact.first_name.includes(searchQuery)).sort((a,b) => a.last_name.localeCompare(b.last_name))\n    const pageCount = filteredContacts.length > 0 ? Math.ceil(filteredContacts.length / USERS_PER_PAGE) : 1;\n\n    if (currentPage <= pageCount) {\n      const contactsToDisplay = filteredContacts.slice(USERS_PER_PAGE * (currentPage - 1), USERS_PER_PAGE * currentPage)\n      return [pageCount, contactsToDisplay]\n    } else {\n      return [pageCount, filteredContacts]\n    }\n\n  }, [contactsData, searchQuery, currentPage])\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className='app-content'>\n        <BarLoader loading={isFetchingData} css={override} color='#00754e'/>\n        <ContactsNavigation currentPage={currentPage} setCurrentPage={setCurrentPage} searchQuery={searchQuery} setSearchQuery={setSearchQuery} pageCount={pageCount}/>\n        <ContactsList contactsDisplayed={[...filteredContacts]} contactsData={contactsData} setContactsData={setContactsData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}